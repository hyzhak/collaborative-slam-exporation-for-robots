services:
  redis:
    image: "redis:7-alpine"
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 2s
      timeout: 2s
      retries: 30

  db:
    image: "postgres:15-alpine"
    environment:
      - POSTGRES_DB=sagadb
      - POSTGRES_USER=sagauser
      - POSTGRES_PASSWORD=sagapass
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  celery_worker:
    build: .
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_started
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - POSTGRES_HOST=db
      - POSTGRES_DB=sagadb
      - POSTGRES_USER=sagauser
      - POSTGRES_PASSWORD=sagapass
    command: celery -A app.celery_app worker --pool=prefork --concurrency=4 --loglevel=DEBUG -E
    healthcheck:
      test: ["CMD", "celery", "-A", "app.celery_app", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./app:/app/app

  flower:
    image: mher/flower:latest
    depends_on:
      - redis
    ports:
      - "5555:5555"
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0

  redisinsight:
    image: redislabs/redisinsight:latest
    depends_on:
      - redis
    ports:
      - "8001:8001"
      - "5540:5540"
    environment:
      - RI_REDIS_HOST=redis
      - RI_REDIS_PORT=6379
      - RI_REDIS_ALIAS=saga-redis

  orchestrator:
    build: .
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - REDIS_STREAM=mission:commands
    command: python -m app.command_handlers.command_listener
    volumes:
      - ./app:/app/app

volumes:
  pgdata:
